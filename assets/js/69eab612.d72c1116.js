"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[6009],{9221:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>m});var s=n(5893),a=n(1151);const r={sidebar_position:5,title:"Part 4: Lift State Up",sidebar_label:"Lifting the State up"},o=void 0,i={id:"rps-in-react/lift-state-up",title:"Part 4: Lift State Up",description:"For both the WelcomeView and GameView components to communicate the name with each other, we need to lift the state up to the parent component. This means that the state will be managed by the parent component and passed down to the child components as props.",source:"@site/content/assignments/8.rps-in-react/4.lift-state-up.md",sourceDirName:"8.rps-in-react",slug:"/rps-in-react/lift-state-up",permalink:"/assignments/rps-in-react/lift-state-up",draft:!1,unlisted:!1,editUrl:"https://github.com/IT3049C/IT3049C.github.io/tree/main/content/assignments/8.rps-in-react/4.lift-state-up.md",tags:[],version:"current",lastUpdatedBy:"Yahya Gilany",lastUpdatedAt:1709518744,formattedLastUpdatedAt:"Mar 4, 2024",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Part 4: Lift State Up",sidebar_label:"Lifting the State up"},sidebar:"assignments",previous:{title:"States",permalink:"/assignments/rps-in-react/states"},next:{title:"Game Logic",permalink:"/assignments/rps-in-react/logic"}},c={},m=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["For both the ",(0,s.jsx)(t.code,{children:"WelcomeView"})," and ",(0,s.jsx)(t.code,{children:"GameView"})," components to communicate the ",(0,s.jsx)(t.code,{children:"name"})," with each other, we need to lift the state up to the parent component. This means that the state will be managed by the parent component and passed down to the child components as props."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",metastring:'title="src/App.jsx"',children:'...\nimport {setState} from \'react\';\n...\n\nfunction App() {\n  const [userName, setUserName] = useState("");\n\n  return (\n    <div class="container">\n      ...\n      <WelcomeView userName={userName} setUserName={setUserName} />\n      <GameView userName={userName} />\n      ...\n    </div>\n  );\n}\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",metastring:'title="src/components/WelcomeView.jsx"',children:'import { useState } from "react";\n\nconst WelcomeView = ({userName, setUserName}) => {\n  return (\n    <div id="welcome-screen">\n      <form id="name-form">\n        <div className="form-group">\n          <label htmlFor="username">Type your name: </label>\n          <input\n            value={userName}\n            onChange={(e) => {setUserName(e.target.value)}}\n            className="form-control"\n            type="text"\n            id="username"\n            name="username"\n            required placeholder="Enter Name Here..." minLength="2"\n            maxLength="15" />\n        </div>\n        <button class="btn btn-primary" id="start-game-button" type="button">\n          Start Game!\n        </button>\n      </form>\n    </div>\n  );\n};\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",metastring:'title="src/components/GameView.jsx"',children:'const GameView = ({userName}) => {\n  return (\n    <div id="game-screen">\n      <div id="score-tally">\n        <p id="score"> {UserName}: 0 v CPU: 0</p>\n      </div>\n\n      <form id="game-form">\n        <div className="form-group">\n          <label htmlFor="user-selection">Select your choice: </label>\n          <select\n            className="custom-select"\n            id="user-selection"\n            name="user-selection"\n          >\n            <option id="rock" value="rock">\n              Rock\n            </option>\n            <option id="paper" value="paper">\n              Paper\n            </option>\n            <option id="scissors" value="scissors">\n              Scissors\n            </option>\n          </select>\n        </div>\n        <button class="btn btn-primary" id="play-button" type="button">\n          Play\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default GameView;\n'})})]})}function p(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>o});var s=n(7294);const a={},r=s.createContext(a);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);