"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[6733],{2144:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var i=n(5893),l=n(1151);const a={sidebar_position:2,title:"Part 3: Dynamically Build the Layout",sidebar_label:"Dynamic Layout"},r=void 0,s={id:"wordle/capture-input",title:"Part 3: Dynamically Build the Layout",description:"Layout Building",source:"@site/content/assignments/7.wordle/3.capture-input.md",sourceDirName:"7.wordle",slug:"/wordle/capture-input",permalink:"/assignments/wordle/capture-input",draft:!1,unlisted:!1,editUrl:"https://github.com/IT3049C/IT3049C.github.io/tree/main/content/assignments/7.wordle/3.capture-input.md",tags:[],version:"current",lastUpdatedBy:"Yahya Gilany",lastUpdatedAt:1708022665,formattedLastUpdatedAt:"Feb 15, 2024",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Part 3: Dynamically Build the Layout",sidebar_label:"Dynamic Layout"},sidebar:"assignments",previous:{title:"Light/Dark Mode",permalink:"/assignments/wordle/light-dark-mode"},next:{title:"Network Requests",permalink:"/assignments/wordle/network"}},o={},d=[{value:"Layout Building",id:"layout-building",level:2},{value:"Add Letter Cell to Grid",id:"add-letter-cell-to-grid",level:3},{value:"Create a Grid of Cells using a double for loop",id:"create-a-grid-of-cells-using-a-double-for-loop",level:3},{value:"Create a function that adds a letter to a cell at a given position.",id:"create-a-function-that-adds-a-letter-to-a-cell-at-a-given-position",level:3},{value:"Capture User Input",id:"capture-user-input",level:2},{value:"Misc.",id:"misc",level:3}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"layout-building",children:"Layout Building"}),"\n",(0,i.jsx)(t.h3,{id:"add-letter-cell-to-grid",children:"Add Letter Cell to Grid"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Each cell should have an ID that corresponds to its position in the grid."}),"\n",(0,i.jsxs)(t.li,{children:["Each cell should have a class of ",(0,i.jsx)(t.code,{children:"letter"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"create-a-grid-of-cells-using-a-double-for-loop",children:"Create a Grid of Cells using a double for loop"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"we need to create a constant that captures the game configuration (e.g., number of rows and columns)."}),"\n",(0,i.jsxs)(t.li,{children:["We'll need to create a function that will dynamically build the layout based on the game configuration.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Call the previous function to create the grid of cells."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"create-a-function-that-adds-a-letter-to-a-cell-at-a-given-position",children:"Create a function that adds a letter to a cell at a given position."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["We need to create a variable that captures the game state:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"The word that the user is trying to guess."}),"\n",(0,i.jsx)(t.li,{children:"the current attempt"}),"\n",(0,i.jsx)(t.li,{children:"the current position of the last letter added to the grid."}),"\n",(0,i.jsxs)(t.li,{children:["The full grid, to make it easier to check the words","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Alternatively, we'd have to extract the content of each cell and concatenate it to form the word."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:"call that last function, make sure it works"})}),"\n",(0,i.jsx)(t.h2,{id:"capture-user-input",children:"Capture User Input"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Add an event listener on the document that listens for the ",(0,i.jsx)(t.code,{children:"keydown"})," event."]}),"\n",(0,i.jsxs)(t.li,{children:["When a key is pressed, check if it is a letter.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["If it is a letter, add it to the grid at the right position.","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Call the function that adds a letter to a cell at a given position. (this function should also add it to the )"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["If it is a ",(0,i.jsx)(t.code,{children:"backspace"})," key, remove the last letter from the grid."]}),"\n",(0,i.jsxs)(t.li,{children:["If it is an ",(0,i.jsx)(t.code,{children:"enter"})," key:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"If the current attempt is more than the game allowed number of attempts, end the game."}),"\n",(0,i.jsx)(t.li,{children:"If the current position is less than the length of the word, indicate that the word is not complete."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.li,{children:"If it is not a letter, ignore it."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"misc",children:"Misc."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"We need to keep track of the position of the last letter added to the grid."}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://api.dictionaryapi.dev/api/v2/entries/en/word",children:"https://api.dictionaryapi.dev/api/v2/entries/en/word"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,l.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>r});var i=n(7294);const l={},a=i.createContext(l);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);